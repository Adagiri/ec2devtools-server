extend type Query {
  user: User!
  "React admin"
  User(id: ID!): User!
  "React admin"
  allUsers(
    page: Int
    perPage: Int
    sortField: String
    sortOrder: String
    filter: UserFilter
  ): [User!]!
  "React admin"
  _allUsersMeta(
    page: Int
    perPage: Int
    sortField: String
    sortOrder: String
    filter: UserFilter
  ): ListMetadata
}

extend type Mutation {
  signup(
    githubId: String!
    username: String!
    photoURL: String
    email: String
  ): UserResponse!
  login(githubId: String!): UserResponse!
  signout: DefaultResponse!
}

type User {
  _id: ID!
  username: String!
  email: String
  photoURL: String
  hasCompletedOnboarding: Boolean!
  activeAccount: Account
}

type UserResponse {
  code: String!
  success: Boolean!
  data: User
  token: String
}

input UserFilter {
  username: String
}
